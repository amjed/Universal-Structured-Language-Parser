/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelMain.java
 *
 * Created on Nov 3, 2010, 12:02:31 AM
 */

package jellyfish.triplestore.editor;

import java.awt.Component;
import java.awt.Container;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import jellyfish.common.persistence.PersistenceUtil;
import jellyfish.dnd.DndSource;
import jellyfish.dnd.DndSourceEventListener;
import jellyfish.triplestore.editor.model.EntityBox;
import jellyfish.triplestore.model.Entity;
import jellyfish.triplestore.model.Triple;

/**
 *
 * @author Xevia
 */
public class PanelMain extends javax.swing.JPanel {

    private JFrame parentFrame;
    private EntityManager entityManager;
    private DndSource newEntitySource;
    private List<PanelEntityBox> panelEntityBoxes;
    private List<Triple> triples;

    /** Creates new form PanelMain */
    public PanelMain(JFrame parentFrame) {
        this.entityManager = PersistenceUtil.getEntityManager();
        this.parentFrame = parentFrame;
        this.panelEntityBoxes = new ArrayList<PanelEntityBox>();
        this.triples = new ArrayList<Triple>();
        initComponents();
    }

    private void init() {
        
        newEntitySource = new DndSource(newEntitySourcePanel, new DndSourceEventListener() {
            public Component getTransferedObject(Component component) {
                
                String entityName = JOptionPane.showInputDialog(
                        PanelMain.this.parentFrame, "Please enter the Entity name");
                if (entityName==null || entityName.isEmpty())
                    return null;

                Entity entity = new Entity(entityName);
                EntityBox entityBox = new EntityBox(entity);
                PanelEntityBox panelEntityBox = new PanelEntityBox(entityBox);

                entityManager.persist(entity);
                entityManager.persist(entityBox);

                return panelEntityBox;
            }

            public void componentDropped(Container prevParent, Component component) {
                
            }
        });

        
    }

    private void initPanelEntiyBox(final PanelEntityBox panelEntityBox)
    {
//        DndSource source = new DndSource(panelEntityBox, new DndSourceEventListener() {
//            public Object getTransferedObject(Component component) {
//                return panelEntityBox;
//            }
//
//            public void componentDropped(Container prevParent, Component component) {
//
//            }
//        });
//
//        DndTarget target = new DndTarget(panelEntityBox, new DndTargetEventListener() {
//            public boolean canAcceptType(Class type) {
//                return type==PanelEntityBox.class;
//            }
//
//            public void acceptObject(Object object, Point location) {
//                PanelEntityBox peb = (PanelEntityBox)object;
//                EntityBox entityBox = peb.getEntityBox();
//                Entity entity = entityBox.getEntity();
//            }
//        });
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolPanel = new javax.swing.JPanel();
        newEntitySourcePanel = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        chkCreateNewConnection = new javax.swing.JCheckBox();
        panelDiagram = new jellyfish.triplestore.editor.PanelDiagram();

        setLayout(new java.awt.BorderLayout());

        toolPanel.setBackground(new java.awt.Color(153, 255, 204));
        toolPanel.setName("toolPanel"); // NOI18N

        newEntitySourcePanel.setBackground(new java.awt.Color(255, 204, 204));
        newEntitySourcePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        newEntitySourcePanel.setMaximumSize(new java.awt.Dimension(150, 30));
        newEntitySourcePanel.setMinimumSize(new java.awt.Dimension(150, 30));
        newEntitySourcePanel.setName("newEntitySourcePanel"); // NOI18N
        newEntitySourcePanel.setPreferredSize(new java.awt.Dimension(150, 30));
        newEntitySourcePanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New Entity");
        jLabel1.setName("jLabel1"); // NOI18N
        newEntitySourcePanel.add(jLabel1, java.awt.BorderLayout.CENTER);

        toolPanel.add(newEntitySourcePanel);

        chkCreateNewConnection.setText("Create New Connection");
        chkCreateNewConnection.setName("chkCreateNewConnection"); // NOI18N
        chkCreateNewConnection.setOpaque(false);
        chkCreateNewConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCreateNewConnectionActionPerformed(evt);
            }
        });
        toolPanel.add(chkCreateNewConnection);

        add(toolPanel, java.awt.BorderLayout.PAGE_START);

        panelDiagram.setBackground(new java.awt.Color(153, 255, 153));
        panelDiagram.setName("panelDiagram"); // NOI18N
        panelDiagram.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                panelDiagramComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                panelDiagramComponentRemoved(evt);
            }
        });
        add(panelDiagram, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void chkCreateNewConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCreateNewConnectionActionPerformed

        panelDiagram.setDraggingActive(false);

    }//GEN-LAST:event_chkCreateNewConnectionActionPerformed

    private void panelDiagramComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_panelDiagramComponentAdded

        if (evt.getChild() instanceof PanelEntityBox) {
            panelEntityBoxes.add((PanelEntityBox)evt.getChild());
            initPanelEntiyBox((PanelEntityBox)evt.getChild());
        }
        if (evt.getChild() instanceof PanelConnectorPoint) {
            panelDiagram.setDraggingActive(true);
        }

    }//GEN-LAST:event_panelDiagramComponentAdded

    private void panelDiagramComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_panelDiagramComponentRemoved

        if (evt.getChild() instanceof PanelEntityBox
                && panelEntityBoxes.contains((PanelEntityBox)evt.getChild()))
            panelEntityBoxes.remove((PanelEntityBox)evt.getChild());

    }//GEN-LAST:event_panelDiagramComponentRemoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkCreateNewConnection;
    private javax.swing.JPanel newEntitySourcePanel;
    private jellyfish.triplestore.editor.PanelDiagram panelDiagram;
    private javax.swing.JPanel toolPanel;
    // End of variables declaration//GEN-END:variables

}
